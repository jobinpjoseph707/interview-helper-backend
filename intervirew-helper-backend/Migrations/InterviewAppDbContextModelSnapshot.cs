// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace intervirew_helper_backend.Migrations
{
    [DbContext(typeof(InterviewAppDbContext))]
    partial class InterviewAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("intervirew_helper_backend.Models.ApplicationRole", b =>
                {
                    b.Property<int>("ApplicationRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationRoleId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationRoleId");

                    b.ToTable("ApplicationRoles");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"));

                    b.Property<int>("ApplicationRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InterviewDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OverallScore")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CandidateId");

                    b.HasIndex("ApplicationRoleId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.CandidateTechnologyScore", b =>
                {
                    b.Property<int>("CandidateTechnologyScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateTechnologyScoreId"));

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceLevelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.HasKey("CandidateTechnologyScoreId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ExperienceLevelId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("CandidateTechnologyScores");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.ExperienceLevel", b =>
                {
                    b.Property<int>("ExperienceLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienceLevelId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExperienceLevelId");

                    b.ToTable("ExperienceLevels");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("ApplicationRoleId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceLevelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("ExperienceLevelId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnologyId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Candidate", b =>
                {
                    b.HasOne("intervirew_helper_backend.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("Candidates")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.CandidateTechnologyScore", b =>
                {
                    b.HasOne("intervirew_helper_backend.Models.Candidate", "Candidate")
                        .WithMany("CandidateTechnologyScores")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.ExperienceLevel", "ExperienceLevel")
                        .WithMany("CandidateTechnologyScores")
                        .HasForeignKey("ExperienceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.Technology", "Technology")
                        .WithMany("CandidateTechnologyScores")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("ExperienceLevel");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Question", b =>
                {
                    b.HasOne("intervirew_helper_backend.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("Questions")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.ExperienceLevel", "ExperienceLevel")
                        .WithMany("Questions")
                        .HasForeignKey("ExperienceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.Technology", "Technology")
                        .WithMany("Questions")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("ExperienceLevel");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.ApplicationRole", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Candidate", b =>
                {
                    b.Navigation("CandidateTechnologyScores");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.ExperienceLevel", b =>
                {
                    b.Navigation("CandidateTechnologyScores");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Technology", b =>
                {
                    b.Navigation("CandidateTechnologyScores");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
