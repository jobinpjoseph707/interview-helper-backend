// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterviewHelper.DataAccess.Migrations
{
    [DbContext(typeof(InterviewAppDbContext))]
    [Migration("20240930094314_interview-Helper")]
    partial class interviewHelper
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("intervirew_helper_backend.Models.ApplicationRole", b =>
                {
                    b.Property<int>("ApplicationRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationRoleId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationRoleId");

                    b.ToTable("ApplicationRoles");

                    b.HasData(
                        new
                        {
                            ApplicationRoleId = 1,
                            IsActive = true,
                            Name = "Front End Developer"
                        },
                        new
                        {
                            ApplicationRoleId = 2,
                            IsActive = true,
                            Name = "Back End Developer"
                        },
                        new
                        {
                            ApplicationRoleId = 3,
                            IsActive = true,
                            Name = "Database/SQl"
                        });
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"));

                    b.Property<int>("ApplicationRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InterviewDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OverallScore")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CandidateId");

                    b.HasIndex("ApplicationRoleId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.CandidateTechnologyScore", b =>
                {
                    b.Property<int>("CandidateTechnologyScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateTechnologyScoreId"));

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceLevelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.HasKey("CandidateTechnologyScoreId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ExperienceLevelId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("CandidateTechnologyScores");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.ExperienceLevel", b =>
                {
                    b.Property<int>("ExperienceLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienceLevelId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExperienceLevelId");

                    b.ToTable("ExperienceLevels");

                    b.HasData(
                        new
                        {
                            ExperienceLevelId = 1,
                            IsActive = true,
                            Level = "Fresher"
                        },
                        new
                        {
                            ExperienceLevelId = 2,
                            IsActive = true,
                            Level = "Mid"
                        },
                        new
                        {
                            ExperienceLevelId = 3,
                            IsActive = true,
                            Level = "Senior"
                        });
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("ApplicationRoleId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceLevelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("ExperienceLevelId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "What is Angular Dependency Injection?"
                        },
                        new
                        {
                            QuestionId = 2,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "Explain Angular Component Lifecycle."
                        },
                        new
                        {
                            QuestionId = 3,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "How does Change Detection work in Angular?"
                        },
                        new
                        {
                            QuestionId = 4,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "What are Angular Services?"
                        },
                        new
                        {
                            QuestionId = 5,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "Explain Angular Pipes."
                        },
                        new
                        {
                            QuestionId = 6,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "What is NgZone in Angular?"
                        },
                        new
                        {
                            QuestionId = 7,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "What is the difference between ngIf and hidden in Angular?"
                        },
                        new
                        {
                            QuestionId = 8,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "What are Angular Directives?"
                        },
                        new
                        {
                            QuestionId = 9,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "Explain how Angular CLI works."
                        },
                        new
                        {
                            QuestionId = 10,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "How do you optimize performance in Angular?"
                        },
                        new
                        {
                            QuestionId = 11,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What is JSX in React?"
                        },
                        new
                        {
                            QuestionId = 12,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "Explain React Components."
                        },
                        new
                        {
                            QuestionId = 13,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What are React Hooks?"
                        },
                        new
                        {
                            QuestionId = 14,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What is the Virtual DOM in React?"
                        },
                        new
                        {
                            QuestionId = 15,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "How do you handle events in React?"
                        },
                        new
                        {
                            QuestionId = 16,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What is a React Fragment?"
                        },
                        new
                        {
                            QuestionId = 17,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What are Props in React?"
                        },
                        new
                        {
                            QuestionId = 18,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "How does state management work in React?"
                        },
                        new
                        {
                            QuestionId = 19,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What are Higher-Order Components in React?"
                        },
                        new
                        {
                            QuestionId = 20,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What is the difference between state and props?"
                        },
                        new
                        {
                            QuestionId = 21,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What is hoisting in JavaScript?"
                        },
                        new
                        {
                            QuestionId = 22,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "Explain closures in JavaScript."
                        },
                        new
                        {
                            QuestionId = 23,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What is event delegation in JavaScript?"
                        },
                        new
                        {
                            QuestionId = 24,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "How do JavaScript Promises work?"
                        },
                        new
                        {
                            QuestionId = 25,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What is the event loop in JavaScript?"
                        },
                        new
                        {
                            QuestionId = 26,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What is the difference between let and var?"
                        },
                        new
                        {
                            QuestionId = 27,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "How does async/await work in JavaScript?"
                        },
                        new
                        {
                            QuestionId = 28,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What is a JavaScript module?"
                        },
                        new
                        {
                            QuestionId = 29,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "Explain JavaScript destructuring."
                        },
                        new
                        {
                            QuestionId = 30,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What is the Temporal Dead Zone in JavaScript?"
                        },
                        new
                        {
                            QuestionId = 31,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 3,
                            Text = "What is Vue.js?"
                        },
                        new
                        {
                            QuestionId = 32,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 3,
                            Text = "Explain Vue.js Components."
                        },
                        new
                        {
                            QuestionId = 33,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 4,
                            Text = "What is Svelte?"
                        },
                        new
                        {
                            QuestionId = 34,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 4,
                            Text = "Explain Svelte's reactivity model."
                        },
                        new
                        {
                            QuestionId = 35,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 5,
                            Text = "Explain the key features of Java."
                        },
                        new
                        {
                            QuestionId = 36,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 5,
                            Text = "What are Java streams?"
                        },
                        new
                        {
                            QuestionId = 37,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 6,
                            Text = "What is the purpose of Rust’s ownership model?"
                        },
                        new
                        {
                            QuestionId = 38,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 6,
                            Text = "Explain Rust’s memory safety."
                        },
                        new
                        {
                            QuestionId = 39,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 8,
                            Text = "What is functional programming?"
                        },
                        new
                        {
                            QuestionId = 40,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 8,
                            Text = "Explain higher-order functions in functional programming."
                        },
                        new
                        {
                            QuestionId = 41,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 3,
                            Text = "What are Vue Directives?"
                        },
                        new
                        {
                            QuestionId = 42,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 3,
                            Text = "How does Vue.js handle state management?"
                        },
                        new
                        {
                            QuestionId = 43,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 3,
                            Text = "Explain Vue Router and its usage."
                        },
                        new
                        {
                            QuestionId = 44,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 3,
                            Text = "What is Vuex and how does it work?"
                        },
                        new
                        {
                            QuestionId = 45,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 4,
                            Text = "What is the Svelte Store?"
                        },
                        new
                        {
                            QuestionId = 46,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 4,
                            Text = "How do you handle forms in Svelte?"
                        },
                        new
                        {
                            QuestionId = 47,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 4,
                            Text = "Explain the reactivity mechanism in Svelte."
                        },
                        new
                        {
                            QuestionId = 48,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 4,
                            Text = "How do transitions and animations work in Svelte?"
                        },
                        new
                        {
                            QuestionId = 49,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 5,
                            Text = "What is the difference between HashMap and Hashtable?"
                        },
                        new
                        {
                            QuestionId = 50,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 5,
                            Text = "Explain Java garbage collection."
                        },
                        new
                        {
                            QuestionId = 51,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 5,
                            Text = "What is the significance of the `volatile` keyword in Java?"
                        },
                        new
                        {
                            QuestionId = 52,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 5,
                            Text = "Explain how memory management works in Java."
                        },
                        new
                        {
                            QuestionId = 53,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 6,
                            Text = "What is the borrow checker in Rust?"
                        },
                        new
                        {
                            QuestionId = 54,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 6,
                            Text = "How do Rust traits work?"
                        },
                        new
                        {
                            QuestionId = 55,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 6,
                            Text = "Explain the difference between `Box`, `Rc`, and `Arc` in Rust."
                        },
                        new
                        {
                            QuestionId = 56,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 6,
                            Text = "How does Rust ensure memory safety without garbage collection?"
                        },
                        new
                        {
                            QuestionId = 57,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 8,
                            Text = "What is the significance of immutability in functional programming?"
                        },
                        new
                        {
                            QuestionId = 58,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 8,
                            Text = "Explain how recursion is handled in functional programming."
                        },
                        new
                        {
                            QuestionId = 59,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 9,
                            Text = "What is the difference between a list and a tuple in Python?"
                        },
                        new
                        {
                            QuestionId = 60,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 9,
                            Text = "What are Python decorators?"
                        },
                        new
                        {
                            QuestionId = 61,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 9,
                            Text = "Explain how list comprehensions work in Python."
                        },
                        new
                        {
                            QuestionId = 62,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 9,
                            Text = "What is a generator in Python?"
                        },
                        new
                        {
                            QuestionId = 63,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 9,
                            Text = "Explain Python's Global Interpreter Lock (GIL)."
                        },
                        new
                        {
                            QuestionId = 64,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 9,
                            Text = "How does memory management work in Python?"
                        },
                        new
                        {
                            QuestionId = 65,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 10,
                            Text = "What is the difference between value type and reference type in C#?"
                        },
                        new
                        {
                            QuestionId = 66,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 10,
                            Text = "Explain how exception handling works in C#."
                        },
                        new
                        {
                            QuestionId = 67,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 10,
                            Text = "What are C# delegates?"
                        },
                        new
                        {
                            QuestionId = 68,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 10,
                            Text = "What is LINQ in C#?"
                        },
                        new
                        {
                            QuestionId = 69,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 10,
                            Text = "Explain async/await in C# and how it compares to other languages."
                        },
                        new
                        {
                            QuestionId = 70,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 10,
                            Text = "How does garbage collection work in C#?"
                        },
                        new
                        {
                            QuestionId = 71,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "What is Angular's Dependency Injection?"
                        },
                        new
                        {
                            QuestionId = 72,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "How do you create reusable components in Angular?"
                        },
                        new
                        {
                            QuestionId = 73,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "What is Angular Universal and how does it handle server-side rendering?"
                        },
                        new
                        {
                            QuestionId = 74,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 1,
                            Text = "How do you optimize the performance of an Angular application?"
                        },
                        new
                        {
                            QuestionId = 75,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What is the use of `useEffect` in React?"
                        },
                        new
                        {
                            QuestionId = 76,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "Explain how React handles state with `useState`."
                        },
                        new
                        {
                            QuestionId = 77,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "What is React Server Components?"
                        },
                        new
                        {
                            QuestionId = 78,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 3,
                            IsActive = true,
                            TechnologyId = 2,
                            Text = "Explain Context API in React and how it is used."
                        },
                        new
                        {
                            QuestionId = 79,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What are JavaScript data types?"
                        },
                        new
                        {
                            QuestionId = 80,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 1,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "Explain the difference between `var`, `let`, and `const` in JavaScript."
                        },
                        new
                        {
                            QuestionId = 81,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "Explain how `async` and `await` work in JavaScript."
                        },
                        new
                        {
                            QuestionId = 82,
                            ApplicationRoleId = 1,
                            ExperienceLevelId = 2,
                            IsActive = true,
                            TechnologyId = 7,
                            Text = "What are JavaScript Promises and how are they used?"
                        });
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnologyId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            TechnologyId = 1,
                            IsActive = true,
                            Name = "Angular"
                        },
                        new
                        {
                            TechnologyId = 2,
                            IsActive = true,
                            Name = "React"
                        },
                        new
                        {
                            TechnologyId = 3,
                            IsActive = true,
                            Name = "Vue.js"
                        },
                        new
                        {
                            TechnologyId = 4,
                            IsActive = true,
                            Name = "Svelte"
                        },
                        new
                        {
                            TechnologyId = 5,
                            IsActive = true,
                            Name = "HTML5"
                        },
                        new
                        {
                            TechnologyId = 6,
                            IsActive = true,
                            Name = "CSS3"
                        },
                        new
                        {
                            TechnologyId = 7,
                            IsActive = true,
                            Name = "JavaScript"
                        },
                        new
                        {
                            TechnologyId = 8,
                            IsActive = true,
                            Name = "TypeScript"
                        },
                        new
                        {
                            TechnologyId = 9,
                            IsActive = true,
                            Name = "Bootstrap"
                        },
                        new
                        {
                            TechnologyId = 10,
                            IsActive = true,
                            Name = "TailwindCSS"
                        },
                        new
                        {
                            TechnologyId = 11,
                            IsActive = true,
                            Name = "Angular Material"
                        },
                        new
                        {
                            TechnologyId = 12,
                            IsActive = true,
                            Name = "Ant Design"
                        },
                        new
                        {
                            TechnologyId = 13,
                            IsActive = true,
                            Name = "Chakra UI"
                        },
                        new
                        {
                            TechnologyId = 14,
                            IsActive = true,
                            Name = "Node.js + Express"
                        },
                        new
                        {
                            TechnologyId = 15,
                            IsActive = true,
                            Name = ".NET Core"
                        },
                        new
                        {
                            TechnologyId = 16,
                            IsActive = true,
                            Name = "Django"
                        },
                        new
                        {
                            TechnologyId = 17,
                            IsActive = true,
                            Name = "Flask"
                        },
                        new
                        {
                            TechnologyId = 18,
                            IsActive = true,
                            Name = "Spring Boot"
                        },
                        new
                        {
                            TechnologyId = 19,
                            IsActive = true,
                            Name = "Ruby on Rails"
                        },
                        new
                        {
                            TechnologyId = 20,
                            IsActive = true,
                            Name = "PHP + Laravel"
                        },
                        new
                        {
                            TechnologyId = 21,
                            IsActive = true,
                            Name = "PostgreSQL"
                        },
                        new
                        {
                            TechnologyId = 22,
                            IsActive = true,
                            Name = "MySQL"
                        },
                        new
                        {
                            TechnologyId = 23,
                            IsActive = true,
                            Name = "MariaDB"
                        },
                        new
                        {
                            TechnologyId = 24,
                            IsActive = true,
                            Name = "SQLite"
                        },
                        new
                        {
                            TechnologyId = 25,
                            IsActive = true,
                            Name = "Microsoft SQL Server"
                        },
                        new
                        {
                            TechnologyId = 26,
                            IsActive = true,
                            Name = "MongoDB"
                        },
                        new
                        {
                            TechnologyId = 27,
                            IsActive = true,
                            Name = "Firebase"
                        },
                        new
                        {
                            TechnologyId = 28,
                            IsActive = true,
                            Name = "Cassandra"
                        },
                        new
                        {
                            TechnologyId = 29,
                            IsActive = true,
                            Name = "Redis"
                        },
                        new
                        {
                            TechnologyId = 30,
                            IsActive = true,
                            Name = "Neo4j"
                        });
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Candidate", b =>
                {
                    b.HasOne("intervirew_helper_backend.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("Candidates")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.CandidateTechnologyScore", b =>
                {
                    b.HasOne("intervirew_helper_backend.Models.Candidate", "Candidate")
                        .WithMany("CandidateTechnologyScores")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.ExperienceLevel", "ExperienceLevel")
                        .WithMany("CandidateTechnologyScores")
                        .HasForeignKey("ExperienceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.Technology", "Technology")
                        .WithMany("CandidateTechnologyScores")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("ExperienceLevel");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Question", b =>
                {
                    b.HasOne("intervirew_helper_backend.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("Questions")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.ExperienceLevel", "ExperienceLevel")
                        .WithMany("Questions")
                        .HasForeignKey("ExperienceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intervirew_helper_backend.Models.Technology", "Technology")
                        .WithMany("Questions")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("ExperienceLevel");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.ApplicationRole", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Candidate", b =>
                {
                    b.Navigation("CandidateTechnologyScores");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.ExperienceLevel", b =>
                {
                    b.Navigation("CandidateTechnologyScores");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("intervirew_helper_backend.Models.Technology", b =>
                {
                    b.Navigation("CandidateTechnologyScores");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
